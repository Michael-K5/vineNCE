% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/classifier_methods.R
\name{perform_quant_reg_mcqrnn}
\alias{perform_quant_reg_mcqrnn}
\title{performs a Neural Network quantile regression (MCQRNN)}
\usage{
perform_quant_reg_mcqrnn(
  covariates_train,
  covariates_test,
  response_train,
  response_test,
  bottom_q_NN_train = c(0.01, 0.05, 0.1, 0.15, 0.2),
  bottom_q_NN_predict = seq(0.01, 0.2, 0.01),
  top_q_NN_train = c(0.8, 0.85, 0.9, 0.95, 0.99),
  top_q_NN_predict = seq(0.8, 0.99, 0.01),
  num_hidden = 10,
  num_trials = 1,
  penalty = 0.1,
  max_iter = 500,
  activation = qrnn::sigmoid,
  user_info = FALSE
)
}
\arguments{
\item{covariates_train}{matrix or dataframe. The covariates to train the quantile regression method.}

\item{covariates_test}{matrix or dataframe. The covariates to test the quantile regression method.}

\item{response_train}{Vector. Values to predict in the quantile regression (train set)}

\item{response_test}{Vector. Values to predict in the quantile regression (test set)}

\item{bottom_q_NN_train}{Vector of lower quantiles, for which the model is fitted
Note: a longer vector here tends to improve the fit but also increase runtime considerably.
Recommendation: Train on no more than every 5 percent quantiles, predict the others with mcqrnn}

\item{bottom_q_NN_predict}{Vector of lower quantiles,
for which it is checked, whether the conditioned quantile estimates are >0.
Tests whether the alternative model is better.}

\item{top_q_NN_train}{Vector of top quantiles, for which the model is fitted
Note: a longer vector here tends to improve the fit but also increase runtime considerably.
Recommendation: Train on no more than every 5 percent quantiles, predict the others with mcqrnn}

\item{top_q_NN_predict}{Vector of top quantiles,
for which it is checked, whether the conditioned quantile estimates are >0.
Tests whether the simplified model is better.}

\item{num_hidden}{int, defaults to 10. Number of hidden units in the
single hidden layer of the NN}

\item{num_trials}{int, defaults to 1. Number of repeated fitting procedures
(To try and avoid local minima)}

\item{penalty}{float, defaults to 0.1. Parameter for weight decay regularization}

\item{max_iter}{int, defaults to 500. Maximum number of iterations of the
optimization algorithm}

\item{activation}{Which activation function to use. Needs to be one of the activation
functions in the qrnn package. Defaults to sigmoid.}

\item{user_info}{Boolean, defaults to FALSE. If True, diagnostic messages are
printed during optimization}
}
\value{
A List of 4 vectors. The first vector contains the number of samples, for which
q(bottom_quantile_levels) > 0 holds, the second containing the number of samples, for
which q(top_quantile_levels) < 0 holds. Behind that train and test pinball loss are listed.
}
\description{
performs a Neural Network quantile regression (MCQRNN)
}
